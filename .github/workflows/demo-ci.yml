# Name: CI-Pipeline
# Description: This workflow will do an initial check for dependency updates and cache node_modules after that.
# It will then run linting, formatting, unit tests, e2e tests and coverage.
# The coverage report will be uploaded to Codecov.
# Finally, it will build the application.

name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check_dependencies:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install dependencies
      run: npm install

    - name: Check for package updates
      run: npx ncu --doctor -u

    - name: Check if package.json has changed
      id: check_package_json
      run: git diff --quiet HEAD -- package.json || echo "::set-output name=changed::true"

    - name: Persist changes in package.json
      if: steps.check_package_json.outputs.changed == 'true'
      run: |
        git add package.json package-lock.json
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git commit -m "Update dependencies"
        git push

    - name: update installed packages
      if: steps.check_package_json.outputs.changed == 'true'
      run: npm install

    - name: Cache Node Modules
      id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: node_modules-${{ hashFiles('package-lock.json') }}

  linting:
    runs-on: ubuntu-latest
    needs: check_dependencies

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install dependencies
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm install

    - name: Linting
      run: npm run lint

    - name: Check if code has changed
      id: check_lint_changes
      run: git diff --quiet HEAD -- || echo "::set-output name=changed::true"

    - name: Persist changes in code
      if: steps.check_lint_changes.outputs.changed == 'true'
      run: |
        git add .
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git commit -m "Fix linting errors"
        git push

  formatting:
    runs-on: ubuntu-latest
    needs: [linting, check_dependencies]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install dependencies
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm install

    - name: Formatting
      run: npm run format

    - name: Check if code has changed
      id: check_format_changes
      run: git diff --quiet HEAD -- || echo "::set-output name=changed::true"

    - name: Persist changes in code
      if: steps.check_format_changes.outputs.changed == 'true'
      run: |
        git add .
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git commit -m "Fix formatting errors"
        git push

  tests:
    runs-on: ubuntu-latest
    needs: check_dependencies

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install dependencies
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm install

    - name: unit testing
      run: npm test

    #- name: e2e testing
    #  run: npm run test:e2e

  coverage:
    runs-on: ubuntu-latest
    needs: tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install dependencies
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm install

    - name: coverage
      run: npm run test:cov

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

  build:
    runs-on: ubuntu-latest
    needs: [check_dependencies, tests, linting, formatting]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Install dependencies
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm install

    - name: Build the application
      run: npm run build
